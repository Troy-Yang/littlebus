{"version":3,"sources":["components/users.js","components/rooms.js","providers/dataProvider.js","providers/helper.js","components/DeleteButton.js","components/RoomUsers.js","components/manageRoom.js","components/archives.js","components/schedules.js","components/Dashboard.js","providers/authProvider.js","config.js","App.js","serviceWorker.js","index.js"],"names":["ROLES","id","name","UserCreate","props","react_default","a","createElement","Create","SimpleForm","TextInput","source","RadioButtonGroupInput","choices","UserEdit","Edit","DisabledInput","UserList","List","Object","assign","perPage","Responsive","small","SimpleList","primaryText","record","username","tertiaryText","Date","createTime","toLocaleDateString","medium","Datagrid","TextField","DateField","showTime","EditButton","DeleteButton","RoomCreate","RoomList","linkType","ShowButton","getMappingPrimaryKey","resource","dataProvider","type","params","options","headers","Authorization","localStorage","getItem","GET_LIST","_params$pagination","pagination","page","_params$sort","sort","field","order","query","JSON","stringify","range","filter","url","concat","GET_ONE","GET_MANY","ids","GET_MANY_REFERENCE","_params$pagination2","_params$sort2","objectSpread","defineProperty","target","UPDATE","method","data","CREATE","DELETE","Error","convertDataProviderRequestToHTTP","axios","then","response","primaryKey","total","length","orderBy","toLocaleLowerCase","startIndex","endIndex","slice","map","item","convertHTTPResponseToDataProvider","catch","error","status","Promise","reject","request","post","remove","withStyles","theme","createStyles","deleteButton","color","palette","main","&:hover","backgroundColor","fade","@media (hover: none)","Button_default","onClick","label","className","classnames","classes","Delete_default","state","avaibleUsers","addUser","values","_this","doAction","deleteUser","e","token","substring","encodeURIComponent","extendToken","actionPromise","_this$props","fetchStart","fetchEnd","refreshView","showNotification","message","finally","_this2","this","Number","MAX_VALUE","_ref","setState","_this3","rows","tokens","filteredUsers","u","find","user","Fragment","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","row","key","role","expireTime","Button","style","AddAlarm_default","DeleteButton_DeleteButton","save","AutocompleteInput","optionText","optionValue","validate","required","React","Component","mapDispatchToProps","push","connect","RoomShow","Show","TabbedShowLayout","Tab","path","RoomUsers","DurationField","_ref$record","time","hrs","mins","secs","ret","fancyTimeFormat","duration","DownloadField","_ref2","href","rel","ArchiveList","createdAt","archives_DurationField","archives_DownloadField","ScheduleCreate","TabbedForm","FormTab","ReferenceInput","reference","lib","LongTextInput","defaultValue","NumberInput","BooleanInput","ScheduleEdit","ScheduleList","title","Dashboard","Card_default","CardHeader_default","CardContent_default","defaults","baseURL","authProvider","AUTH_LOGIN","userRole","setItem","resolve","AUTH_LOGOUT","removeItem","AUTH_ERROR","AUTH_CHECK","App","Admin","loginPage","Login","dashboard","Resource","list","edit","create","icon","UserIcon","show","Assignment","Videocam","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2cbf37f.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  List, Datagrid, TextField, Create, EditButton, Edit,\n  SimpleForm, DisabledInput, DeleteButton,\n  RadioButtonGroupInput, DateField,\n  TextInput, Responsive, SimpleList\n} from 'react-admin';\n\nconst ROLES = [\n  { id: 'admin', name: 'admin' },\n  { id: 'teacher', name: 'teacher' },\n  { id: 'student', name: 'student' },\n];\n\nexport const UserCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"username\" />\n      <TextInput source=\"password\" />\n      <TextInput source=\"email\" />\n      <TextInput source=\"phone\" />\n      <RadioButtonGroupInput source=\"userRole\" choices={ROLES} />\n    </SimpleForm>\n  </Create>\n);\n\n\nexport const UserEdit = props => (\n  <Edit {...props}>\n    <SimpleForm>\n      <DisabledInput source=\"username\" />\n      <TextInput source=\"password\" />\n      <TextInput source=\"email\" />\n      <TextInput source=\"phone\" />\n      <RadioButtonGroupInput source=\"userRole\" choices={ROLES} />\n    </SimpleForm>\n  </Edit>\n);\n\nexport const UserList = props => (\n  <List {...props} perPage={8}>\n    <Responsive\n      small={\n        <SimpleList\n          primaryText={record => record.username}\n          tertiaryText={record => new Date(record.createTime).toLocaleDateString()}\n        />\n      }\n      medium={\n        <Datagrid>\n          <TextField source=\"username\" />\n          <TextField source=\"password\" />\n          <TextField source=\"userRole\" />\n          <DateField source=\"createTime\" showTime />\n          <EditButton />\n          <DeleteButton />\n        </Datagrid>\n      }\n    />\n  </List>\n);","import React from 'react';\nimport {\n  List, Datagrid, TextField, Create,\n  SimpleForm, DateField, ShowButton, DeleteButton,\n  TextInput, Responsive, SimpleList,\n} from 'react-admin';\n\nexport const RoomCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" />\n    </SimpleForm>\n  </Create>\n);\n\nexport const RoomList = props => (\n  <List {...props} perPage={8}>\n    <Responsive\n      small={\n        <SimpleList\n          primaryText={record => record.name}\n          tertiaryText={record => new Date(record.createTime).toLocaleDateString()}\n          linkType=\"show\"\n        />\n      }\n      medium={\n        <Datagrid>\n          <TextField source=\"name\" />\n          <TextField source=\"sessionId\" />\n          <DateField source=\"createTime\" showTime />\n          <ShowButton />\n          <DeleteButton />\n        </Datagrid>\n      }\n    />\n  </List>\n);","// in src/dataProvider\nimport {\n  GET_LIST,\n  GET_ONE,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n  CREATE,\n  UPDATE,\n  DELETE,\n} from 'react-admin';\nimport { stringify } from 'query-string';\nimport { orderBy } from 'lodash';\n\nimport axios from 'axios';\n\n/**\n* @param {String} type One of the constants appearing at the top of this file, e.g. 'UPDATE'\n* @param {String} resource Name of the resource to fetch, e.g. 'posts'\n* @param {Object} params The Data Provider request params, depending on the type\n* @returns {Object} { url, options } The HTTP request parameters\n*/\nconst convertDataProviderRequestToHTTP = (type, resource, params) => {\n  let options = {};\n  options.headers = {};\n  options.headers.Authorization = localStorage.getItem('token');\n\n  switch (type) {\n  case GET_LIST: {\n    const { page, perPage } = params.pagination;\n    const { field, order } = params.sort;\n    const query = {\n      sort: JSON.stringify([field, order]),\n      range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n      filter: JSON.stringify(params.filter),\n    };\n    options.url = `${resource}?${stringify(query)}`;\n    options.url = `${resource}`;\n    break;\n  }\n  case GET_ONE:\n    options.url = `${resource}/${params.id}`;\n    break;\n  case GET_MANY: {\n    const query = {\n      filter: JSON.stringify({ id: params.ids }),\n    };\n    options.url = `${resource}?${stringify(query)}`;\n    break;\n  }\n  case GET_MANY_REFERENCE: {\n    const { page, perPage } = params.pagination;\n    const { field, order } = params.sort;\n    const query = {\n      sort: JSON.stringify([field, order]),\n      range: JSON.stringify([(page - 1) * perPage, (page * perPage) - 1]),\n      filter: JSON.stringify({ ...params.filter, [params.target]: params.id }),\n    };\n    options.url = `${resource}?${stringify(query)}`;\n    break;\n  }\n  case UPDATE:\n    options.method = 'PUT';\n    options.data = params.data;\n    options.url = `${resource}/${params.id}`;\n    break;\n  case CREATE:\n    options.method = 'POST';\n    options.data = params.data;\n    options.url = `${resource}`;\n    break;\n  case DELETE:\n    options.method = 'DELETE';\n    options.data = params.data;\n    options.url = `${resource}/${params.id}`;\n    break;\n  default:\n    throw new Error(`Unsupported fetch action type ${type}`);\n  }\n  return options;\n};\n\n/**\n* @param {Object} response HTTP response from fetch()\n* @param {String} type One of the constants appearing at the top of this file, e.g. 'UPDATE'\n* @param {String} resource Name of the resource to fetch, e.g. 'posts'\n* @param {Object} params The Data Provider request params, depending on the type\n* @returns {Object} Data Provider response\n*/\nconst convertHTTPResponseToDataProvider = (response, type, resource, params) => {\n  const primaryKey = getMappingPrimaryKey(resource);\n  switch (type) {\n  case GET_LIST:\n  case GET_MANY:\n    let total = response.data.length;\n    if (params.sort && params.sort.field) {\n      response.data = orderBy(response.data, [params.sort.field], [params.sort.order.toLocaleLowerCase()]);\n    }\n    if(params.pagination) {\n      let startIndex = (params.pagination.page - 1) * params.pagination.perPage;\n      let endIndex = startIndex + params.pagination.perPage;\n      response.data = response.data.slice(startIndex, endIndex);\n    }\n    return {\n      data: response.data.map((item) => {\n        return Object.assign(item, { id: item[primaryKey] });\n      }),\n      total\n    };\n  case UPDATE:\n  case GET_ONE:\n  case CREATE:\n  case DELETE:\n    return { data: { ...response.data, id: response.data[primaryKey] } };\n  default:\n    return { data: response.data };\n  }\n};\n\nconst getMappingPrimaryKey = (resource) => {\n  switch (resource) {\n  case 'user':\n    return 'username';\n  case 'room':\n    return 'name';\n  default:\n    return 'id';\n  }\n};\n\n/**\n* @param {string} type Request type, e.g GET_LIST\n* @param {string} resource Resource name, e.g. \"posts\"\n* @param {Object} payload Request parameters. Depends on the request type\n* @returns {Promise} the Promise for response\n*/\nexport default (type, resource, params) => {\n  const options = convertDataProviderRequestToHTTP(type, resource, params);\n  return axios(options)\n    .then(response => convertHTTPResponseToDataProvider(response, type, resource, params))\n    .catch(error => {\n      if (error.response.status < 200 || error.response.status >= 300) {\n        return Promise.reject(error.response);\n      }\n    });\n};","import axios from 'axios';\n\nconst request = (options) => {\n  options.headers = {};\n  options.headers.Authorization = localStorage.getItem('token');\n  return axios(options);\n};\n\nexport const post = (url, data, options) => {\n  return request({\n    url,\n    data,\n    method: 'post',\n    ...options\n  });\n};\n\nexport const remove = (url, options) => {\n  return request({\n    url,\n    method: 'delete',\n    ...options\n  });\n};\n\n// export default {\n//   get: (url, options) => {\n//     return request({\n//       url,\n//       method: 'get',\n//       ...options\n//     });\n//   },\n//   post: (url, data, options) => {\n//     return request({\n//       url,\n//       data,\n//       method: 'post',\n//       ...options\n//     });\n//   },\n//   put: (url, data, options) => {\n//     return request({\n//       url,\n//       data,\n//       method: 'put',\n//       ...options\n//     });\n//   },\n//   remove: (url, options) => {\n//     return request({\n//       url,\n//       method: 'delete',\n//       ...options\n//     });\n//   }\n// };","\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ActionDelete from '@material-ui/icons/Delete';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles, createStyles } from '@material-ui/core';\nimport classnames from 'classnames';\n\nconst styles = theme =>\n  createStyles({\n    deleteButton: {\n      color: theme.palette.error.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n          backgroundColor: 'transparent',\n        },\n      },\n    },\n  });\n\nexport const DeleteButton = withStyles(styles)((props) =>\n  <Button\n    onClick={props.onClick}\n    label='Delete'\n    className={classnames(\n      'ra-delete-button',\n      props.classes.deleteButton\n    )}>\n    <ActionDelete />\n  </Button>);","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  GET_LIST, SimpleForm, required,\n  fetchEnd, Button,\n  fetchStart,\n  showNotification,\n  refreshView,\n} from 'react-admin';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { AutocompleteInput } from 'react-admin';\nimport dataProvider from '../providers/dataProvider';\nimport { post, remove } from '../providers/helper';\nimport { DeleteButton } from './DeleteButton';\nimport { push } from 'react-router-redux';\nimport AddAlarm from '@material-ui/icons/AddAlarm';\n\nclass UserList extends React.Component {\n  state = {\n    avaibleUsers: []\n  };\n\n  componentDidMount() {\n    this.props.fetchStart();\n    dataProvider(GET_LIST, 'user', {\n      pagination: {\n        page: 1,\n        perPage: Number.MAX_VALUE\n      },\n      sort: {}\n    })\n      .then(({ data }) => {\n        this.setState({\n          avaibleUsers: data\n        });\n      })\n      .catch(error => {\n        this.props.showNotification(error.message, 'error');\n      })\n      .finally(() => {\n        this.props.fetchEnd();\n      });\n  }\n\n  addUser = (values) => {\n    this.doAction(post(\n      `room/${this.props.record.name}/generateToken`,\n      values\n    ));\n  }\n\n  deleteUser = (e) => {\n    let token = e.token.substring(e.token.length - 100);\n    this.doAction(remove(`room/${this.props.record.name}/token/${encodeURIComponent(token)}`));\n  };\n\n  extendToken = (e) => {\n    let token = e.token.substring(e.token.length - 100);\n    this.doAction(post(`room/${this.props.record.name}/extendtoken/${encodeURIComponent(token)}`));\n  };\n\n  doAction = (actionPromise) => {\n    const { fetchStart, fetchEnd, refreshView, showNotification} = this.props;\n    if (actionPromise instanceof Promise) {\n      fetchStart();\n      actionPromise\n      .then(refreshView)\n      .catch(error => {\n        showNotification(error.message, 'error');\n      })\n      .finally(fetchEnd);\n    }\n  }\n\n  render() {\n    let rows = this.props.record.tokens;\n    let filteredUsers = this.state.avaibleUsers.filter((u) => {\n      return !rows.find((item) => item.user === u.username);\n    });\n    return (\n      <React.Fragment>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>User</TableCell>\n              <TableCell>Role</TableCell>\n              <TableCell>Expired Time</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow key={row.user}>\n                <TableCell>{row.user}</TableCell>\n                <TableCell>{row.role}</TableCell>\n                <TableCell>{new Date(row.expireTime).toLocaleDateString()}</TableCell>\n                <TableCell>\n                  <Button style={{ color: '#3f51b5' }} onClick={() => this.extendToken(row)}><AddAlarm /></Button>\n                  <DeleteButton onClick={() => this.deleteUser(row)} />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <SimpleForm save={this.addUser}>\n          <AutocompleteInput source=\"user\"\n            choices={filteredUsers}\n            optionText=\"username\"\n            optionValue=\"username\"\n            validate={required()} />\n          {/* <ReferenceInput label=\"new user\" source=\"username\" reference=\"user\">\n            <AutocompleteInput optionText=\"username\" validate={required()} setFilter={filterUser}/>\n          </ReferenceInput> */}\n        </SimpleForm>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchEnd,\n  fetchStart,\n  showNotification,\n  push,\n  refreshView,\n};\n\nexport default connect(null, mapDispatchToProps)(UserList);","import React from 'react';\nimport {\n  Show, TextField, DateField,\n  TabbedShowLayout, Tab,\n} from 'react-admin';\nimport RoomUsers from './RoomUsers';\n\nexport const RoomShow = (props) => (\n  <Show {...props}>\n    <TabbedShowLayout>\n      <Tab label=\"summary\">\n        <TextField source=\"name\" />\n        <TextField source=\"sessionId\" />\n        <DateField source=\"createTime\" />\n      </Tab>\n      <Tab label=\"users\" path=\"users\">\n        <RoomUsers></RoomUsers>\n      </Tab>\n    </TabbedShowLayout>\n  </Show>\n);","import React from 'react';\nimport {\n  List, Datagrid, TextField, DateField, DeleteButton,\n  Responsive, SimpleList\n} from 'react-admin';\n\nconst fancyTimeFormat = (time) => {\n  // Hours, minutes and seconds\n  var hrs = ~~(time / 3600);\n  var mins = ~~((time % 3600) / 60);\n  var secs = ~~time % 60;\n\n  // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n  var ret = '';\n\n  if (hrs > 0) {\n    ret += '' + hrs + ':' + (mins < 10 ? '0' : '');\n  }\n\n  ret += '' + mins + ':' + (secs < 10 ? '0' : '');\n  ret += '' + secs;\n  return ret;\n};\n\nconst DurationField = ({ record = {} }) => <span>{fancyTimeFormat(record.duration)}</span>;\n\nconst DownloadField = ({ record }) => {\n  return record.url && <a href={record.url} target=\"_blank\" rel=\"noopener noreferrer\" >Download</a>;\n};\n\nexport const ArchiveList = props => (\n  <List {...props} perPage={8}>\n    <Responsive\n      small={\n        <SimpleList\n          primaryText={record => record.name}\n          tertiaryText={record => new Date(record.createdAt).toLocaleDateString()}\n        />\n      }\n      medium={\n        <Datagrid>\n          <TextField source=\"name\" />\n          <TextField source=\"status\" />\n          <DateField source=\"createdAt\" showTime/>\n          <DurationField source=\"duration\" />\n          <DownloadField source=\"url\" />\n          <DeleteButton />\n        </Datagrid>\n      }\n    />\n  </List>\n);","import React from 'react';\nimport {\n  List, Datagrid, TextField, Create, LongTextInput, Edit,\n  TabbedForm, FormTab, DateField, EditButton, DeleteButton, ReferenceInput, AutocompleteInput,\n  TextInput, Responsive, SimpleList, required, NumberInput, BooleanInput, DisabledInput,\n} from 'react-admin';\nimport { DateTimeInput } from 'react-admin-date-inputs';\n\nexport const ScheduleCreate = props => (\n  <Create {...props}>\n    <TabbedForm>\n      <FormTab label=\"summary\">\n        <TextInput source=\"title\" validate={required()} />\n        <TextInput source=\"attenders\" validate={required()} />\n        <ReferenceInput label=\"room\" source=\"room\" reference=\"room\">\n          <AutocompleteInput optionText=\"name\" />\n        </ReferenceInput>\n        <DateTimeInput source=\"startdate\" validate={required()} />\n        <DateTimeInput source=\"enddate\" validate={required()} />\n        <LongTextInput source=\"description\" />\n      </FormTab>\n      <FormTab label=\"Steaming Setting\">\n        <DisabledInput source=\"streamName\" validate={required()} defaultValue='littlebus'/>\n        <DateTimeInput source=\"expiredTime\" validate={required()} />\n        <NumberInput source=\"trialTime\" />\n        <BooleanInput label=\"Is Free?\" source=\"isFree\" />\n      </FormTab>\n    </TabbedForm>\n  </Create>\n);\n\nexport const ScheduleEdit = props => (\n  <Edit {...props}>\n    <TabbedForm>\n      <FormTab label=\"summary\">\n        <TextInput source=\"title\" validate={required()} />\n        <TextInput source=\"attenders\" validate={required()} />\n        <ReferenceInput label=\"room\" source=\"room\" reference=\"room\">\n          <AutocompleteInput optionText=\"name\" />\n        </ReferenceInput>\n        <DateTimeInput source=\"startdate\" validate={required()} />\n        <DateTimeInput source=\"enddate\" validate={required()} />\n        <LongTextInput source=\"description\" />\n      </FormTab>\n      <FormTab label=\"Steaming Setting\">\n        <DisabledInput source=\"streaming.streamName\" label=\"stream Name\" validate={required()} defaultValue='littlebus'/>\n        <DateTimeInput source=\"streaming.expiredTime\" label=\"expired time\" validate={required()} />\n        <NumberInput source=\"streaming.trialTime\" label=\"trail minuts\"/>\n        <BooleanInput label=\"Is Free?\" source=\"streaming.isFree\" />\n      </FormTab>\n    </TabbedForm>\n  </Edit>\n);\n\nexport const ScheduleList = props => (\n  <List {...props} perPage={8}>\n    <Responsive\n      small={\n        <SimpleList\n          primaryText={record => record.title}\n          tertiaryText={record => new Date(record.createTime).toLocaleDateString()}\n          linkType=\"show\"\n        />\n      }\n      medium={\n        <Datagrid>\n          <TextField source=\"title\" />\n          <TextField source=\"description\" />\n          <TextField source=\"attenders\" />\n          <TextField source=\"status\" />\n          <DateField source=\"startdate\" showTime />\n          <DateField source=\"enddate\" showTime />\n          <DateField source=\"createTime\" showTime />\n          <EditButton />\n          <DeleteButton />\n        </Datagrid>\n      }\n    />\n  </List>\n);","// in src/Dashboard.js\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nexport default () => (\n  <Card>\n    <CardHeader title=\"Welcome to the Little Bus!\" />\n    <CardContent></CardContent>\n  </Card>\n);","// in src/authProvider.js\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\nimport axios from 'axios';\nimport config from '../config';\naxios.defaults.baseURL = config.serviceBasicUrl || 'http://localhost:4000/api/';\n\nexport default (type, params) => {\n  // called when the user attempts to log in\n  if (type === AUTH_LOGIN) {\n    const options = {\n      url: 'auth/login',\n      method: 'POST',\n      data: params\n    };\n    return axios(options)\n      .then(response => response.data)\n      .then(({ token, username, userRole }) => {\n        localStorage.setItem('token', token);\n        localStorage.setItem('username', username);\n        localStorage.setItem('role', userRole);\n        return Promise.resolve(username);\n      })\n      .catch(error => {\n        if (error.response.status < 200 || error.response.status >= 300) {\n          throw new Error(error.response.data.message);\n        }\n      });;\n  }\n  // called when the user clicks on the logout button\n  if (type === AUTH_LOGOUT) {\n    localStorage.removeItem('username');\n    return Promise.resolve();\n  }\n  // called when the API returns an error\n  if (type === AUTH_ERROR) {\n    const { status } = params;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username');\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  }\n  // called when the user navigates to a new location\n  if (type === AUTH_CHECK) {\n    return localStorage.getItem('username')\n      ? Promise.resolve()\n      : Promise.reject();\n  }\n  return Promise.reject('Unknown method');\n};","export default {\n  serviceBasicUrl: 'https://akhs7hdl61.execute-api.ap-northeast-1.amazonaws.com/prod/api/'\n  // // Jason's Dev\n  // serviceBasicUrl: 'https://u0qjg42luh.execute-api.ap-northeast-1.amazonaws.com/dev/api/'\n  // // Troy's Prod\n  // serviceBasicUrl: 'https://n5mg79xrk3.execute-api.ap-northeast-1.amazonaws.com/prod/api/'\n  // Local\n  // serviceBasicUrl: 'http://localhost:4000/api/'\n};","// in src/App.js\nimport React from 'react';\nimport { Admin, Resource, Login } from 'react-admin';\nimport { UserList, UserCreate, UserEdit } from './components/users';\nimport { RoomList, RoomCreate } from './components/rooms';\nimport { RoomShow } from './components/manageRoom';\nimport { ArchiveList } from './components/archives';\nimport { ScheduleList, ScheduleCreate, ScheduleEdit } from './components/schedules';\nimport Dashboard from './components/Dashboard';\nimport authProvider from './providers/authProvider';\nimport dataProvider from './providers/dataProvider';\nimport UserIcon from '@material-ui/icons/Group';\nimport Assignment from '@material-ui/icons/Assignment';\nimport Videocam from '@material-ui/icons/Videocam';\n\nconst App = () => (\n  <Admin loginPage={Login} dataProvider={dataProvider} authProvider={authProvider} dashboard={Dashboard} >\n    <Resource name=\"user\" list={UserList} edit={UserEdit} create={UserCreate} icon={UserIcon} />\n    <Resource name=\"room\" list={RoomList}  show={RoomShow} create={RoomCreate} icon={Assignment} />\n    <Resource name=\"schedule\" list={ScheduleList} create={ScheduleCreate} edit={ScheduleEdit} icon={Videocam} />\n    <Resource name=\"archive\" list={ArchiveList} icon={Videocam} />\n  </Admin>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}